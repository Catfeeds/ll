<?php
namespace Lailonginterface\Controller;
use Lailonginterface\Controller\PublicController;

class MineController  extends PublicController {
    /**
     * 成为会员
     */
    public function userauth()
    {
       $token=$_REQUEST['token'];
       $userid=$this->checkAccess($token);
       $realname=$_REQUEST['realname'];
       $birthday=$_REQUEST['birthday'];
       $gender=$_REQUEST['gender'];
       $school=$_REQUEST['school'];
       $grade=$_REQUEST['grade'];
       $call=$_REQUEST['call'];
       $name=$_REQUEST['name'];
       
       if(empty($realname) || empty($birthday) || empty($school) || empty($grade)){
           $this->emptyResult();
       }
       if(M('child')->where("name = '$realname'")->find()){
           $this->errorResult("此孩子已成为会员");
       }
      
       $data=array('name'=>$realname,'birthday'=>$birthday,'gender'=>$gender,'school'=>$school,'grade'=>$grade,'is_vip'=>1,'user_id'=>$userid);
        if(M('child')->add($data)){
             M('member')->add(array('appellation'=>$call,'child_id'=>M('child')->getLastInsID(),'user_id'=>$userid,'createtime'=>date('Y-m-d H:i:s',time())));
            $this->successShortResult($name."已成为会员");
        }else {
            $this->errorResult("成为会员失败");
        }
    }
   //获取年级
   public function grade(){
       $token=$_REQUEST['token'];
       $userid=$this->checkAccess($token);
       $s=M('grade')->select();
       if($s){
           $this->successLongResult($s, "获取年级成功");
       }else{
           $this->errorResult("获取年级失败");
       }
   }
   /**
    * 我的订单接口
    */
   public function myorder(){
       $token=$_REQUEST['token'];
       $userid=$this->checkAccess($token);
       $type=$_REQUEST['type'];
       if(!in_array($electricity,array(0,1,2,3,4)))
       {
           $this->errorResult("参数非法！");
       }
        $field="c.title,c.picture,e.createtime,c.integral,e.state,e.id as orderid,e.course_id";
       //全部
       if($type == -1){
           $res=M('enrollment')->table(C('DB_PREFIX')."enrollment as e")->field($field)->join(C('DB_PREFIX')."course as c on c.id =e.course_id",'left')->where("e.user_id = $userid")->select();
            foreach($res as $r=>$s){
                $res[$r][picture]=__ROOT__.'/data/upload/avatar/'.$s[picture];
            }
       }
       //待支付
       if($type == 0){
           $res=M('enrollment')->table(C('DB_PREFIX')."enrollment as e")->field($field)->join(C('DB_PREFIX')."course as c on c.id =e.course_id",'left')->where("e.user_id = $userid and e.state=$type")->select();
           foreach($res as $r=>$s){
               $res[$r][picture]=__ROOT__.'/data/upload/avatar/'.$s[picture];
           }
       }
       //已付
       if($type == 1){
           $res=M('enrollment')->table(C('DB_PREFIX')."enrollment as e")->field($field)->join(C('DB_PREFIX')."course as c on c.id =e.course_id",'left')->where("e.user_id = $userid and e.state=$type")->select();
           foreach($res as $r=>$s){
               $res[$r][picture]=__ROOT__.'/data/upload/avatar/'.$s[picture];
           }
       }
       //已确认
       if($type == 2){
           $res=M('enrollment')->table(C('DB_PREFIX')."enrollment as e")->field($field)->join(C('DB_PREFIX')."course as c on c.id =e.course_id",'left')->where("e.user_id = $userid and e.state=$type")->select();
           foreach($res as $r=>$s){
               $res[$r][picture]=__ROOT__.'/data/upload/avatar/'.$s[picture];
           }
       }
       //已完成
       if($type == 3){
           $res=M('enrollment')->table(C('DB_PREFIX')."enrollment as e")->field($field)->join(C('DB_PREFIX')."course as c on c.id =e.course_id",'left')->where("e.user_id = $userid and e.state=$type")->select();
           foreach($res as $r=>$s){
               $res[$r][picture]=__ROOT__.'/data/upload/avatar/'.$s[picture];
           }
       }
       //已取消
       if($type == 4){
           $res=M('enrollment')->table(C('DB_PREFIX')."enrollment as e")->field($field)->join(C('DB_PREFIX')."course as c on c.id =e.course_id",'left')->where("e.user_id = $userid and e.state=$type")->select();
           foreach($res as $r=>$s){
               $res[$r][picture]=__ROOT__.'/data/upload/avatar/'.$s[picture];
           }
       }
       if($res){
           $msg="操作成功";
           $this->successLongResult($res, $msg);
       }else{
           $this->errorResult("未能获取订单");
       }
   }
   /**
    * 我的订单详情
    */
   public function myorderdetail(){
       $token=$_REQUEST['token'];
       $userid=$this->checkAccess($token);
       $order_id=$_REQUEST[orderid];
       $field="c.title,c.picture,e.createtime,c.integral,e.state,e.id as orderid,e.course_id,e.order_id as order_sn,c.start_time,e.note as remark,chil.name as childname";
       $res=M('enrollment')->table(C('DB_PREFIX')."enrollment as e")->field($field)->join(C('DB_PREFIX')."course as c on c.id =e.course_id",'left')->join(C('DB_PREFIX')."child as chil on chil.id = e.child_id",'left')->where("e.id = $order_id and e.user_id = $userid")->find();
       $order_lifeinfo=M('enrollment_state')->where("enrollment_id = $order_id")->select();
       $res[order_lifeinfo]=$order_lifeinfo;
       
       if($res){
           $msg="操作成功";
           $this->successLongResult($res, $msg);
       }else{
           $msg="操作失败";
           $this->errorResult($res, $msg);
       }
   }
   /**
    * 编辑小孩
    */
   public function editchild(){
       $token=$_REQUEST['token'];
       $this->checkAccess($token);
       $child=$_REQUEST['child'];
       $nickname=$_REQUEST['nickname'];
       $photo=$_REQUEST['photo'];
       $config = array (
           'FILE_UPLOAD_TYPE' => sp_is_sae () ? "Sae" : 'Local',
           'rootPath' =>  C ( "UPLOADPATH" ),
           /* 'maxSize' => 2097152, // 2M  */
           /* 'maxSize' => 104857600, // 100M  */
           'saveName' => array (
               'uniqid',
           ),
           'exts' => array (
               'jpg',
               'png',
               'jpeg',
               'gif',
               'bmp'
           ),
           'autoSub' => false
       );
       $upload = new \Think\Upload ( $config );
       $info = $upload->upload ();
       $first = array_shift($info);
       $savename= $first['savename'];
       $c=M('Child')->where("id = $child")->save(array('nickname'=>$nickname,'avatar'=>$savename));
       if($c){
           $this->successShortResult("操作成功");
       }else{
           $this->errorResult("操作失败");
       }
   }
   /**
    * 签到
    */
   public function signup(){
       $token=$_REQUEST['token'];
       $user=$this->checkAccess($token);
       if(M('check_in')->add(array('user_id'=>$user,'createtime'=>date('Y-m-d H:i:s',time())))){
           $this->successShortResult("签到成功");
       }else{
           $this->errorResult("签到失败");
       }
   }
   /**
    * 是否签到
    */
   public function is_signup(){
       $token=$_REQUEST['token'];
       $user=$this->checkAccess($token);
       $date=date("Y-m-d H:i:s",time());
       $start=date('Y-m-d 00:00:00',time());
       $end=date('Y-m-d 23:59:59');
       if(M('check_in')->where("createtime between '$start' and '$end'")->find()){
           $this->successShortResult("签到成功");
       }else{
           $this->errorResult("签到失败");
       }
   }
   /**
    * 添加孩子
    */
   public function addchild(){
       $token=$_REQUEST['token'];
       $user=$this->checkAccess($token);
       $realname=$_REQUEST['realname'];
       $birthday=$_REQUEST['birthday'];
       $gender=$_REQUEST['gender'];
       $school=$_REQUEST['school'];
       $grade=$_REQUEST['grade'];
       $data=array('name'=>$realname,'birthday'=>$birthday,'gender'=>$gender,'school'=>$school,'grade'=>$grade,'is_vip'=>0,'user_id'=>$userid);
        if(M('child')->add($data)){
            $this->successShortResult("添加孩子成功");
        }else {
            $this->errorResult("添加孩子失败");
        }
   }
   /**
    * 添加成员
    */
   public function addmember(){
       $token=$_REQUEST['token'];
       $user=$this->checkAccess($token);
       $child=$_REQUEST['child'];
       $call=$_REQUEST['call'];
       $name=$_REQUEST['name'];
       if(M('member')->add(array('appellation'=>$call,'child_id'=>$child,'user_id'=>$userid,'createtime'=>date('Y-m-d H:i:s',time())))){
           
           $this->successShortResult("添加成员成功");
       }else {
           $this->errorResult("添加成员失败");
       }
   }
   /**
    * 获取用户积分和积分记录
    */
   public function getscore(){
       $token=$_REQUEST['token'];
       $user=$this->checkAccess($token);
       $array=array();
       $u=M('user')->field("integral")->where("id = $user")->find();
       $array[myintegral][] =$u[integral];
       $i=M("integral")->where("user_id = $user")->select();
       $array[scorelist] = $i;
       $this->successShortResult("操作成功");
   }
   /**
    * 我的消息
    */
   public function mymessage(){
       $token=$_REQUEST['token'];
       $user=$this->checkAccess($token);
       $n=M('news')->where("user_id = $user")->select();
       if($n){
           $this->successShortResult("操作成功");
       }else{
           $this->errorResult("操作失败");
       }
   }
}