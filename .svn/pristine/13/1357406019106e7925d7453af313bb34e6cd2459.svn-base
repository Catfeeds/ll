<?php

namespace Order\Controller;
use Common\Controller\AdminbaseController;
class OrderController extends AdminbaseController {
	function _initialize() {
	}
     public function orderlist(){
        $_SESSION['num_enrollment']="";
        $_SESSION['e_res']="";
         $where= "1=1";
        $order_id=$_REQUEST['order_id'];//订单id
        $ctitle=$_REQUEST['ctitle'];//课程名
        $chname=$_REQUEST['chname'];//学生名
        $state=$_REQUEST['state'];//支付状态
        $uphone=$_REQUEST['uphone'];//手机号
        $screatetime=$_REQUEST['screatetime'];
        $ecreatetime=$_REQUEST['ecreatetime'];
        if(!empty($order_id)){
            $where.=" and e.order_id like '%".$order_id."%' ";
            $parameter['order_id']=$order_id;
            $this->assign("order_id",$order_id);
        }
        if(!empty($ctitle)){
            $where.=" and c.title like '%".$ctitle."%' ";
            $parameter['ctitle']=$ctitle;
            $this->assign("ctitle",$ctitle);
        }
        if(!empty($chname)){
            $where.=" and ch.name like '%".$chname."%' ";
            $parameter['chname']=$chname;
            $this->assign("chname",$chname);
        }
        if(!empty($state)){
            if($state=='99'){
                $state1=0;
            }else{
                $state1=$state;
            }
            $where.=" and e.state = ".$state1;
            $parameter['state']=$state;
            $this->assign("state",$state);
        }
        if(!empty($uphone)){
            $where.=" and u.phone like '%".$uphone."%' ";
            $parameter['uphone']=$uphone;
            $this->assign("uphone",$uphone);
        }
        if(!empty($screatetime)){
            $where.=" and e.createtime >= '".$screatetime."' ";
            $parameter['screatetime']=$screatetime;
            $this->assign("screatetime",$screatetime);
        }
        if(!empty($ecreatetime)){
            $where.=" and e.createtime <= '".$ecreatetime."' ";
            $parameter['ecreatetime']=$ecreatetime;
            $this->assign("ecreatetime",$ecreatetime);
        }
         $model = M ("enrollment");
         $count = $model->table(C('DB_PREFIX').'enrollment as e')
                 ->join(C('DB_PREFIX')."course as c on c.id = e.course_id",'left')
                 ->join(C('DB_PREFIX')."child as ch on ch.id =e.child_id",'left')
                 ->join(C('DB_PREFIX')."user as u on u.id = e.user_id",'left')
                 ->where($where)->count();
         $page = $this->page($count, 10);
         $list = $model->table(C('DB_PREFIX').'enrollment as e')
                 ->field("e.order_id,c.title as coursename,ch.name as childname,u.phone as username,e.createtime,e.state,e.id,e.cancel_state")
                 ->join(C('DB_PREFIX')."course as c on c.id = e.course_id",'left')
                 ->join(C('DB_PREFIX')."child as ch on ch.id =e.child_id",'left')
                 ->join(C('DB_PREFIX')."user as u on u.id = e.user_id",'left')
                 ->order("e.createtime DESC")->limit($page->firstRow . ',' . $page->listRows)->where($where)->select();
         $this->assign('list', $list);
         if($parameter){
            foreach ($parameter as $key => $value) {
                $page->parameter .= "$key=".urlencode($value)."&";
            }
         } 
         $this->assign("page", $page->show('Admin'));
         $this->display();
     }
     public function findorder(){
         $model = M ("enrollment");
         $where="e.id=$_GET[orderid]";
         $list = $model->table(C('DB_PREFIX').'enrollment as e')
         ->field("e.order_id,c.title as coursename,c.id as cid,ch.name as childname,u.phone as username,e.createtime,e.state,e.id,e.cancel_state,e.note,e.course_id")
         ->join(C('DB_PREFIX')."course as c on c.id = e.course_id",'left')
         ->join(C('DB_PREFIX')."child as ch on ch.id =e.child_id",'left')
         ->join(C('DB_PREFIX')."user as u on u.id = e.user_id",'left')
         ->where($where)->find();
         $param=explode('|订单取消中，取消理由为：',$list[note]);
         $list[note]=$param[1];
         //根据course_id查询课程详细
         $course=M('course')->where(" id = ".$list[course_id])->find();
         if(empty($course)){
         	$this->error("该课程已被删除");
         }
         //再查一下教师名字
         $teacher=M('teacher')->where(" id = ".$course['teacher_id'])->find();
         $this->assign("teacher",$teacher);
         $this->assign('course',$course);
         $this->assign('list',$list);
         $this->display();
     }
     public function editorder(){
         $model = M ("enrollment");
         $where="e.id=$_GET[orderid]";
         $list = $model->table(C('DB_PREFIX').'enrollment as e')
         ->field("e.order_id,c.title as coursename,c.id as cid,ch.name as childname,u.phone as username,e.createtime,e.state,e.id,e.cancel_state,e.note,e.course_id")
         ->join(C('DB_PREFIX')."course as c on c.id = e.course_id",'left')
         ->join(C('DB_PREFIX')."child as ch on ch.id =e.child_id",'left')
         ->join(C('DB_PREFIX')."user as u on u.id = e.user_id",'left')
         ->where($where)->find();
         $param=explode('|订单取消中，取消理由为：',$list[note]);
         $list[note]=$param[1];
         //根据course_id查询课程详细
         $course=M('course')->where(" id = ".$list[course_id])->find();
         if(empty($course)){
         	$this->error("该课程已被删除");
         }
         //再查一下教师名字
         $teacher=M('teacher')->where(" id = ".$course['teacher_id'])->find();
         $this->assign("teacher",$teacher);
         $this->assign('course',$course);
         $this->assign('param',$param[0]);
         $this->assign('list',$list);
         $this->display();
     }
     //取消订单
     public function ordercancel(){
         $res=M('enrollment')->table(C('DB_PREFIX').'enrollment as e')
              ->field("e.order_id,c.title,e.note,e.id,e.cancel_state,e.state")
              ->join(C('DB_PREFIX')."course as c on c.id = e.course_id",'left')
              ->where("e.id = $_GET[orderid]")
              ->find();
         $param=explode('|订单取消中，取消理由为：',$res[note]);
         $res[note]=$param[1];
         $this->assign("list",$res);
         $this->display();
     }
     public function changestate(){
         $editid=$_REQUEST['editid'];
         $state=$_REQUEST['state'];
         $param=$_REQUEST['param'];
         $desc=$_REQUEST['desc'];
         $where="id= $editid";
         if($state == 4){
             M('enrollment')->where($where)->save(array('note'=>$param.'|订单取消中，取消理由为：'.$desc));
             //退回积分并记录
             //根据订单表获取user_id
             $info=M("enrollment")->where(" id =".$editid)->find();
             $uid=$info['user_id'];
             $data['user_id']=$uid;
             $data['obtain_type']=5;//取消报名退回积分
             $data['is_obtain']=1;//获取
             $data['integral']=$info['integral'];
             $data['createtime']=date("Y-m-d H:i:s");
             M("integral")->add($data);
             //查找用户
             $uinfo=M('user')->where(" id =".$uid)->find();
             $data1['integral']=$uinfo['integral']+$info['integral'];
             $data['id']=$uid;
             M("user")->save();
         }
         if(M('enrollment')->where($where)->save(array('state'=>$state))){
         	$liststate = array("0"=>"订单已提交","1"=>"订单已付款","3"=>"订单已完成","4"=>"订单已取消");
         	M("enrollment_state")->add(array("enrollment_id"=>$editid,"state"=>$state,"state_text"=>$liststate[$state],"createtime"=>date("Y-m-d H:i:s")));
             $this->success("操作成功");
         }else{
             $this->error("操作失败");
         }
     }
     public function agreecancelornot(){
         $state=$_POST['state'];
         $editid=$_POST['editid'];
         if($state == ""){
             $this->error("请批复此订单");
         }
         $where="id = $editid";
         if($state == 1){
             if(M('enrollment')->where($where)->save(array('cancel_state'=>2,'state'=>4))){
                 $this->success("操作成功");
             }else{
                 $this->error("操作失败");
             }
         }else{
             M('enrollment')->where($where)->save(array('cancel_state'=>2));
             $this->success("操作成功");
         }
     }
}
