<?php
namespace Lailonginterface\Controller;
use Lailonginterface\Controller\PublicController;
use Other\Controller\MessageController;
class RegisterController  extends PublicController {
   private $_appkeys = 'fff82c736e828424fa1bbb80';
    private $_masterSecret = 'bc6ff9522db3d84edfafb4ac';
    private $bool=1;
    /**
     * 用户注册
     */
    public function index()
    {
       $phone =$_REQUEST['phone'];
       $token=$_REQUEST['token'];
       $pwd=$_REQUEST['password'];
       //验证码
       $code=$_REQUEST['code'];
       //推荐人
       $referees=$_REQUEST['referees'];
       $s=M('sms')->where("phone = '$phone' and code = $code")->find();
       if(!$s){
           $msg = array(
               "code" => 204,
               "msg" => '验证码错误',
           );
           echo json_encode($msg);
           exit();
       }
       if(empty($phone) || empty($pwd)){
           $this->emptyResult();
       }
       if(M('user')->where("phone = '$phone'")->find()){
           $this->errorResult("此手机号已注册");
       }
       $data=array('phone'=>$phone,'password'=>md5($pwd),'integral'=>0,'createtime'=>date('Y-m-d H:i:s'));
       if(!empty($referees)){
            $ph=M('user')->where("phone = '$referees'")->find();
            if(!$ph){
                $msg = array(
                    "code" => 205,
                    "msg" => '查无此联系人，请重新选择',
                );
                echo json_encode($msg);
                exit();
            }
            $ec=M('encourage_config')->field("integral,content")->where("type = 1")->find();
            $data3=array(
                'user_id'=>$ph[id],
                'obtain_type'=>1,
                'is_obtain'=>1,
                'integral'=>$ec[integral],
                'content'=>$ec[content],
                'createtime'=>date('Y-m-d H:i:s',time())
            );
            M('integral')->add($data3);
            $datax=array('integral'=>intval($ph['integral']+$ec[integral]),'phone'=>$referees);
           M('user')->save($datax);
           $platform="android";
           $receive = array('alias'=>array('8'));//别名
           $msg_content = json_encode(array('n_builder_id'=>$ph[id],'您的好友已通过您注册成功，您获得'.$ec[integral].'积分'));
           $this->send(16,3,$receive,1,$msg_content,$platform);
           
       }
       if(M('user')->add($data)){
           $this->successResult( M('user')->getLastInsID());
       }
       $this->checkAccess($token);
       
    }
    //发送验证码
    public function sendcode()
    {
        $user_id = $_REQUEST['user_id'];
        $phone=$_REQUEST['phone'];
        //$this->send_note($phone,$user_id);
        
        //测试
        $code=rand(1000,9999);
        if(!preg_match("/^1[0-9]{10}$/", $phone)){
              $msg = array(
                "code" => 203,
                "msg" => '手机号有误！请重新输入',
            );
            echo json_encode($msg);
            exit();
        }
        //等有短信应用时启用
        $this->send_note($phone);
    }
    function request_post($url="",$param="") {
        if (empty($url) || empty($param)) {
            return false;
        }
        $postUrl = $url;
        $curlPost = $param;
        $ch = curl_init();//初始化curl
        curl_setopt($ch, CURLOPT_URL,$postUrl);//抓取指定网页
        curl_setopt($ch, CURLOPT_HEADER, 1);//设置header
        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);//要求结果为字符串且输出到屏幕上
        curl_setopt($ch, CURLOPT_POST, 1);//post提交方式
        curl_setopt($ch, CURLOPT_POSTFIELDS, $curlPost);
        $data = curl_exec($ch);//运行curl
        curl_close($ch);
        return $data;
    }
    /**
     * 发送
     * @param int $sendno 发送编号。由开发者自己维护，标识一次发送请求
     * @param int $receiver_type 接收者类型。1、指定的 IMEI。此时必须指定 appKeys。2、指定的 tag。3、指定的 alias。4、 对指定 appkey 的所有用户推送消息。* @param string $receiver_value 发送范围值，与 receiver_type相对应。 1、IMEI只支持一个 2、tag 支持多个，使用 "," 间隔。 3、alias 支持多个，使用 "," 间隔。 4、不需要填
     * @param int $msg_type 发送消息的类型：1、通知 2、自定义消息
     * @param string $msg_content 发送消息的内容。 与 msg_type 相对应的值
     * @param string $platform 目标用户终端手机的平台类型，如： android, ios 多个请使用逗号分隔
     */
    public function send($sendno = 15,$receiver_type = 1, $receiver_value = "", $msg_type = 1, $msg_content = "", $platform = 'android')
    {
        $url = 'http://api.jpush.cn:8800/sendmsg/v2/sendmsg';
        $param = '';
        $param .= '&sendno='.$sendno;
        $appkeys = $this->_appkeys;
        $param .= '&app_key='.$appkeys;
        $param .= '&receiver_type='.$receiver_type;
        $param .= '&receiver_value='.$receiver_value;
        $masterSecret = $this->_masterSecret;
        $verification_code = md5($sendno.$receiver_type.$receiver_value.$masterSecret);
        $param .= '&verification_code='.$verification_code;
        $param .= '&msg_type='.$msg_type;
        $param .= '&msg_content='.$msg_content;
        //判断是否为数组
        if(is_array($platform)){
            $param .= '&platform='.$platform[0].",".$platform[1];
        }else{
            $param .= '&platform='.$platform;
        }
        $param .= '&apns_production='.$this->bool;
        $res = $this->request_post($url, $param);
        if ($res === false) {
            return false;
        }
        $res_arr = json_decode($res, true);
    
        $res_arr['errmsg']= '没有错误信息';
        switch (intval($res_arr['errcode'])) {
            case 0:$res_arr['errmsg'] = '发送成功';   break;
            case 10:$res_arr['errmsg'] = '系统内部错误';break;
            case 1001:$res_arr['errmsg'] = '只支持 HTTP Post 方法，不支持 Get 方法';break;
            case 1002:$res_arr['errmsg'] = '缺少了必须的参数';break;
            case 1003:$res_arr['errmsg'] = '参数值不合法';break;
            case 1004:$res_arr['errmsg'] = '验证失败';break;
            case 1005:$res_arr['errmsg'] = '消息体太大';break;
            case 1007:$res_arr['errmsg'] = 'receiver_value 参数 非法';break;
            case 1008:$res_arr['errmsg'] = 'appkey参数非法';break;
            case 1010:$res_arr['errmsg'] = 'msg_content 不合法';break;
            case 1011:$res_arr['errmsg'] = '没有满足条件的推送目标';break;
            case 1012:$res_arr['errmsg'] = 'iOS 不支持推送自定义消息。只有 Android 支持推送自定义消息';break;
            default:break;
        }
        //$msg_content = json_decode($msg_content,true);
    }
}