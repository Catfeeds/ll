<?php

namespace Other\Controller;
use Common\Controller\AdminbaseController;
use Weixin\Controller\PublicController;
use Think\Log;
error_reporting(E_ALL^E_NOTICE);
class MessageController extends AdminbaseController {
    private $_appkeys = 'fff82c736e828424fa1bbb80';
    private $_masterSecret = 'bc6ff9522db3d84edfafb4ac';
    private $bool=1;
	function _initialize() {
	}
    /**
     *消息列表
     */
    public function index() {
        $course = isset ( $_REQUEST ['course'] ) ? $_REQUEST ['course'] : ''; // 关键字
        $user_id = isset ( $_REQUEST ['user_id'] ) ? $_REQUEST ['user_id'] : ''; // 关键字
        $where= "1=1";
        //判断是否表单处提交的数据，如果是就重置session值
        if($_REQUEST['leixing']==1){
            $_SESSION['course']=$course;
            $_SESSION['users_id']=$user_id;
        }
        if($_SESSION['course'] != ''){
            $where .= " and c.id = $_SESSION[course]";
        }
        if($_SESSION['users_id'] != ''){
            $where .= " and  n.user_id = $_SESSION[users_id]";
        }
        if($_POST['type']=='全部'){
            $_SESSION['course']="";
            $_SESSION['users_id']="";
        }
        $model = M ("news");
        $count = $model->where($where)->table(C('DB_PREFIX')."news as n")
              ->join(C('DB_PREFIX')."course as c on c.id = n.course_id",'left')
              ->join(C('DB_PREFIX')."user as u on u.id = n.user_id",'left')->count();
        $page = $this->page($count, C('PAGENUM'));
        $list = $model->field("n.*,c.title as coursename,u.phone")
              ->table(C('DB_PREFIX')."news as n")
              ->join(C('DB_PREFIX')."course as c on c.id = n.course_id",'left')
              ->join(C('DB_PREFIX')."user as u on u.id = n.user_id",'left')
              ->order("id DESC")->limit($page->firstRow . ',' . $page->listRows)->where($where)->select();
        $c=M('course')->select();
        $this->assign('c', $c);
        $u=M('user')->select();
        $this->assign('u', $u);
        $this->assign('list', $list);
        $this->assign("page", $page->show('Admin'));
        $this->assign("formget",$_SESSION); 
       	$this->display();
    }
    //添加
     public function add(){
        //筛选今天过后的课程//当前时间吧？就这么决定了
        $today=date("Y-m-d H:i:s");
         $res=M('course')->where(" start_time >= '".$today."' ")->select();
         $user=M('user')->select();
         $this->assign('user',$user);
         $this->assign('res',$res);
         $this->display();
     }
     public function add_post(){

         $title=$_REQUEST['title'];
         $course_id=$_REQUEST['course_id'];
         $icon=$_REQUEST['icon'];
         $content=$_REQUEST['content'];
         $user_id=$_REQUEST['user_id'];
         $type=$_REQUEST['type'];
         if(empty($title)){
             $this->error("请填写标题");
         }
         if(empty($course_id)){
              $this->error("请选择课程");
         }
         if(empty($icon)){
             $this->error("请填写图片地址");
         }
         if(empty($content)){
             $this->error("请填写内容");
         }
         // if(empty($user_id)){
         //     $this->error("请选择成员");
         // }
         $t=M('Course')->field("title")->where("id = $course_id")->find();
         //$u=M('user')->field("phone")->where("id= $user_id")->find();
         $data=array(
             'title'=>$title,
             //'type'=>$type,
             'icon'=>$icon,
             'course_id'=>$course_id,
             'content'=>$content,
             //'user_id'=>$user_id,
             'createtime'=>date('Y-m-d H:i:s',time())
         );
         if($_POST['type1']=='1'){
            $data['type']=0;//安卓
            M('news')->add($data);
         }
         if($_POST['type2']=='1'){
            $data['type']=1;//微信
            M('news')->add($data);
         }
         //条件变换一下就行，其他不变，毕竟没细看，不做过多更改//不对这逗比有两个//可能需要改写方法了

         // if($type == 0){
         //     $platform = 'android'; // 接受此信息的系统
         // }else if($type == 1){
         //     $platform = 'weixin';
         // }
        //重写一下//调用的方法里判断一下啊？
         if($_POST['type1']=='1'&&$_POST['type2']=='1'){
            $platform[0]='android';
            $platform[1]="weixin";
         }elseif($_POST['type1']=='1'&&empty($_POST['type2'])){
            $platform="android";
            $msg_content = json_encode(array('n_builder_id'=>1,'n_title'=>$_POST[title], 'n_content'=>$_POST[content],'n_course'=>$t[title],'n_icon'=>$icon,'n_user'=>$u[phone]));
            $this->send(16,4,"",1,$msg_content,$platform);
         }elseif($_POST['type2']=='1'&&empty($_POST['type1'])){
            $data = array (
                'productType' => array ( 'value' => urlencode ( "商品名" )),
                'name' => array ( 'value' => urlencode ("test")),
                'number' => array ( 'value' => urlencode ( "1份" )),
                'expDate' => array ( 'value' => urlencode (date("Y-m-d",time()+$timend*3600*24))),
                'remark'=>array ( 'value' => urlencode ('sss')),
            );
            $usa=M('user')->field("openid")->select();
            foreach($usa as $u=>$a){
                if(!empty($a['openid'])){
                    $this->doSend ( 0, $a['openid'], TONGZHI_MODEL,"", $data );
                }
            }
            $this->success("发送成功");
         }
     }
     public function delete(){
         if(M('news')->delete($_REQUEST[id])){
             $this->success("操作成功");
         }else{
             $this->error("操作失败");
         }
     }
     function request_post($url="",$param="") {
         if (empty($url) || empty($param)) {
             return false;
         }
         $postUrl = $url;
         $curlPost = $param;
         $ch = curl_init();//初始化curl
         curl_setopt($ch, CURLOPT_URL,$postUrl);//抓取指定网页
         curl_setopt($ch, CURLOPT_HEADER, 1);//设置header
         curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);//要求结果为字符串且输出到屏幕上
         curl_setopt($ch, CURLOPT_POST, 1);//post提交方式
         curl_setopt($ch, CURLOPT_POSTFIELDS, $curlPost);
         $data = curl_exec($ch);//运行curl
         curl_close($ch);
         return $data;
     }
     /**
      * 发送
      * @param int $sendno 发送编号。由开发者自己维护，标识一次发送请求
      * @param int $receiver_type 接收者类型。1、指定的 IMEI。此时必须指定 appKeys。2、指定的 tag。3、指定的 alias。4、 对指定 appkey 的所有用户推送消息。* @param string $receiver_value 发送范围值，与 receiver_type相对应。 1、IMEI只支持一个 2、tag 支持多个，使用 "," 间隔。 3、alias 支持多个，使用 "," 间隔。 4、不需要填
      * @param int $msg_type 发送消息的类型：1、通知 2、自定义消息
      * @param string $msg_content 发送消息的内容。 与 msg_type 相对应的值
      * @param string $platform 目标用户终端手机的平台类型，如： android, ios 多个请使用逗号分隔
      */
     public function send($sendno = 15,$receiver_type = 1, $receiver_value = "", $msg_type = 1, $msg_content = "", $platform = 'android')
     {
         $url = 'http://api.jpush.cn:8800/sendmsg/v2/sendmsg';
         $param = '';
         $param .= '&sendno='.$sendno;
         $appkeys = $this->_appkeys;
         $param .= '&app_key='.$appkeys;
         $param .= '&receiver_type='.$receiver_type;
         $param .= '&receiver_value='.$receiver_value;
         $masterSecret = $this->_masterSecret;
         $verification_code = md5($sendno.$receiver_type.$receiver_value.$masterSecret);
         $param .= '&verification_code='.$verification_code;
         $param .= '&msg_type='.$msg_type;
         $param .= '&msg_content='.$msg_content;
         //判断是否为数组
         if(is_array($platform)){
            $param .= '&platform='.$platform[0].",".$platform[1];
         }else{
            $param .= '&platform='.$platform;
         }
         $param .= '&apns_production='.$this->bool;
         $res = $this->request_post($url, $param);
         if ($res === false) {
             return false;
         }
         $res_arr = json_decode($res, true);
          
         $res_arr['errmsg']= '没有错误信息';
         switch (intval($res_arr['errcode'])) {
             case 0:$res_arr['errmsg'] = '发送成功';   break;
             case 10:$res_arr['errmsg'] = '系统内部错误';break;
             case 1001:$res_arr['errmsg'] = '只支持 HTTP Post 方法，不支持 Get 方法';break;
             case 1002:$res_arr['errmsg'] = '缺少了必须的参数';break;
             case 1003:$res_arr['errmsg'] = '参数值不合法';break;
             case 1004:$res_arr['errmsg'] = '验证失败';break;
             case 1005:$res_arr['errmsg'] = '消息体太大';break;
             case 1007:$res_arr['errmsg'] = 'receiver_value 参数 非法';break;
             case 1008:$res_arr['errmsg'] = 'appkey参数非法';break;
             case 1010:$res_arr['errmsg'] = 'msg_content 不合法';break;
             case 1011:$res_arr['errmsg'] = '没有满足条件的推送目标';break;
             case 1012:$res_arr['errmsg'] = 'iOS 不支持推送自定义消息。只有 Android 支持推送自定义消息';break;
             default:break;
         }
         //$msg_content = json_decode($msg_content,true);
         if (intval($res_arr['errcode'])==0){
             $this->success('发送成功');
         }else{
            $this->error("发送失败");
         }
     }
     // 发送自定义的模板消息
     public function doSend($id, $touser, $template_id, $url, $data, $topcolor = '#7B68EE') {
         /*
          * $data = array ( 'first' => array ( 'value' => urlencode ( "您好,您已购买成功" ), 'color' => "#743A3A" ), 'name' => array ( 'value' => urlencode ( "商品信息:微时代电影票" ), 'color' => '#EEEEEE' ), 'remark' => array ( 'value' => urlencode ( '永久有效!密码为:1231313' ), 'color' => '#FFFFFF' ) );
          */
         $log = new Log();
          
         $template = array (
             'touser' => $touser,
             'template_id' => $template_id,
             'url' => $url,
             'topcolor' => $topcolor,
             'data' => $data
         );
         $json_template = json_encode ( $template );
         $log->write($json_template.'111');
         $access_token = $this->get_access_token();
         $log->write($access_token.'222');
         $url = "https://api.weixin.qq.com/cgi-bin/message/template/send?access_token=" . $access_token;
          
         $dataRes = $this->request_post2 ( $url, urldecode ( $json_template ) );
         $log->write($dataRes.'555');
     
     }
     function get_access_token() {
         $appid = APPID;
         $appsecret = APPSECRET;
         $url = "https://api.weixin.qq.com/cgi-bin/token?grant_type=client_credential&appid=$appid&secret=$appsecret";
         $log = new Log();
         $log->write($url);
         $ch = curl_init ();
         curl_setopt ( $ch, CURLOPT_URL, $url );
         curl_setopt ( $ch, CURLOPT_SSL_VERIFYPEER, FALSE );
         curl_setopt ( $ch, CURLOPT_SSL_VERIFYHOST, FALSE );
         curl_setopt ( $ch, CURLOPT_RETURNTRANSFER, 1 );
         $output = curl_exec ( $ch );
         curl_close ( $ch );
         $jsoninfo = json_decode ( $output, true );
         $log->write($jsoninfo);
         $access_token = $jsoninfo ["access_token"];
         return $access_token;
     }
     /**
      * 发送post请求
      *
      * @param string $url
      * @param string $param
      * @return bool mixed
      */
     function request_post2($url = '', $param = '') {
         $log = new Log();
         $log->write($url.$param.'3333');
         if (empty ( $url ) || empty ( $param )) {
             return false;
         }
         $postUrl = $url;
         $curlPost = $param;
         $ch = curl_init (); // 初始化curl
         curl_setopt ( $ch, CURLOPT_URL, $postUrl ); // 抓取指定网页
         curl_setopt ( $ch, CURLOPT_HEADER, 0 ); // 设置header
         curl_setopt ( $ch, CURLOPT_RETURNTRANSFER, 1 ); // 要求结果为字符串且输出到屏幕上
         curl_setopt ( $ch, CURLOPT_SSL_VERIFYPEER, false );
         curl_setopt ( $ch, CURLOPT_POST, 1 ); // post提交方式
         curl_setopt ( $ch, CURLOPT_POSTFIELDS, $curlPost );
         $data = curl_exec ( $ch ); // 运行curl
         $log->write(curl_error ( $ch ).'44444');
         curl_close ( $ch );
         return $data;
     }
} 
